/*
 * (C) Copyright 2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

#include "MediaPipelineImpl.hpp"
#include "JsonRpcHandler.hpp"

namespace kurento
{

MediaPipelineImpl::MediaPipelineImpl (int garbagePeriod) :
  MediaObjectImpl (garbagePeriod)
{
}

std::shared_ptr< MediaObjectImpl >
MediaPipelineImpl::Factory::createObject (int garbagePeriod)
{
  std::shared_ptr<MediaObjectImpl> pipe ( new MediaPipelineImpl (garbagePeriod) );
  return pipe;
}

/* TODO: This should be autogenerated */
std::shared_ptr< MediaObjectImpl > MediaPipelineImpl::Factory::createObject (
  const Json::Value &params)
{
  Json::Value aux;

  int garbagePeriod;

  if (!params.isMember ("garbagePeriod") ) {
    /* param 'garbagePeriod' not present, using default */
    garbagePeriod = 60;/* default value */
  } else {
    aux = params["garbagePeriod"];
    garbagePeriod = aux.asInt();
  }

  return createObject (garbagePeriod);
}

MediaPipelineImpl::Factory MediaPipelineImpl::Factory::factory;

} /* kurento */
