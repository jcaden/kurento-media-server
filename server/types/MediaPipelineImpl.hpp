/*
 * (C) Copyright 2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

#ifndef __MEDIA_PIPELINE_IMPL_HPP__
#define __MEDIA_PIPELINE_IMPL_HPP__

#include "MediaObjectImpl.hpp"
#include "jsoncpp/json/json.h"
#include <memory>

namespace kurento
{

class MediaPipelineImpl : public MediaObjectImpl
{
public:
  MediaPipelineImpl (int garbageCollectorPeriod);

  bool getUnregChilds () {
    return false;
  }

  /* TODO: FactoryCode should be autogenerated */
  class Factory : public MediaObjectImpl::Factory
  {
  public:
    static Factory getFactory() {
      return Factory::factory;
    };

    std::shared_ptr<MediaObjectImpl> createObject (const Json::Value &params);

    std::string getName () {
      return "MediaPipelineImpl";
    };

  private:
    virtual std::shared_ptr<MediaObjectImpl> createObject (int
        garbageCollectorPeriod);

    static Factory factory;
  };
};

#ifdef IS_MODULE
extern "C" {
  MediaPipelineImpl::Factory factory;
}
#endif

} /* kurento */

#endif /* __MEDIA_PIPELINE_IMPL_HPP__ */
